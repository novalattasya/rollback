---
import BlogCard from '@/components/BlogCard.astro'
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import PageHead from '@/components/PageHead.astro'
import PaginationComponent from '@/components/ui/pagination'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'
import { getAllPosts, groupPostsByYear } from '@/lib/data-utils'
import type { PaginateFunction } from 'astro'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const allPosts = await getAllPosts()
  return paginate(allPosts, { pageSize: 9 })
}

const { page } = Astro.props

const postsByYear = groupPostsByYear(page.data)
const years = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a))
---

<Layout class="max-w-none w-full px-8 lg:px-16">
  <PageHead slot="head" title="Blog" />
  
  <div class="max-w-[1600px] mx-auto w-full mb-8">
    <Breadcrumbs
      items={[
        { label: 'Blog', href: '/blog', icon: 'lucide:library-big' },
        { label: `Page ${page.currentPage}`, icon: 'lucide:book-copy' },
      ]}
    />
  </div>

  <div class="flex min-h-[calc(100vh-18rem)] flex-col gap-y-12 max-w-[1600px] mx-auto w-full">
    {
      years.map((year) => (
        <section class="flex flex-col gap-y-6">
          <h2 class="text-2xl font-medium">{year}</h2>
          
          {/* 3 Grid */}
          <ul class="grid grid-cols-1 lg:grid-cols-3 gap-8 w-full auto-rows-fr">
            {postsByYear[year].map((post) => (
              <li class="w-full h-full">
                <BlogCard entry={post} />
              </li>
            ))}
          </ul>
        </section>
      ))
    }
  </div>

  <div class="max-w-[1600px] mx-auto w-full mt-12">
    <PaginationComponent
      currentPage={page.currentPage}
      totalPages={page.lastPage}
      baseUrl="/blog/"
      client:load
    />
  </div>
</Layout>